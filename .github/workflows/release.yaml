name: "Release"

on:
  push:
    branches:
      - main

permissions:
  contents: write

jobs:
  publish_release:
    runs-on: ubuntu-latest
    name: Publish Release

    steps:
      # Step 1: Checkout repository
      - name: Checkout repository
        uses: actions/checkout@v3

      # Step 2: Create and push Git tag
      - name: Create Git Tag
        id: create_tag
        run: |
          # Set up Git user info
          git config user.name "GitHub Actions"
          git config user.email "actions@github.com"

          # Fetch all tags to avoid conflicts
          git fetch --tags

          # Get the latest tag
          latest_tag=$(git describe --tags --abbrev=0 2>/dev/null || echo "v0.0.0")

          # Parse the version and increment the patch version
          major=$(echo $latest_tag | cut -d. -f1 | sed 's/v//')
          minor=$(echo $latest_tag | cut -d. -f2)
          patch=$(echo $latest_tag | cut -d. -f3)
          new_patch=$((patch + 1))
          new_tag="v${major}.${minor}.${new_patch}"

          # Create and push the new tag
          git tag $new_tag
          git push origin $new_tag

          # Output the new tag for later use
          echo "new_tag=$new_tag" >> $GITHUB_ENV

      # Step 5: Setup Go (required for GoReleaser)
      - name: Setup Go
        uses: actions/setup-go@v5
        with:
          go-version: '1.23'

      # Step 6: Run GoReleaser
      - name: Run GoReleaser
        uses: goreleaser/goreleaser-action@v6
        with:
          version: latest
          args: release --clean
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
